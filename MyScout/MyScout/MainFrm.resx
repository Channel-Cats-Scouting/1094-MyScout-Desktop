<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BackBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB8AAAAfCAYAAAAfrhY5AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAABE
        IwAARCMBEiNiKwAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC45bDN+TgAAA3FJREFUWEetl81L
        VFEYxtUKokW0DYooLGrlx+hMETVRmFZaapmLvhYhBoFIX1vX/QVRIBSto7LcJEqhqERhuovCICVqk6hh
        RJP1e868d7yOzsy9Mz3wcO779bznnHvm3jtFQVFRUVFaWVl5PRKJ9MBxrudhAs5hv2d8onh1dfUuKykc
        CDbB1zT4G5CL5A8x2QbKi5MqIaEVIPLSL4z9ifEe41XGRhrUweby8vIO7Pv4p71cEXsg9E5IkMIFn0gf
        PEAo10pKyK+pqqoa8tXOYjdbPDtIPkvRohV+hrW4w25fsS3gq+nobLRZbHWowNd4GG62UF6IRqPb0RqT
        Hkxwe85YaDnsHrutVuN4PL7eQgWBCWz0JoDuLONuCy0BpztcJGirC1pxOrQDaLpboD64SpIRwHaftoCa
        HzV3RpB/kEPUKpIf6Ezo0Hk9YKO53arfWOMXmFmFyGkjN2EiM9h7LZQVXV1dJeQOWt2Ic8ZisZ3mEPc7
        Zwbk29gDNTVWu8ju7ZHgTTkwPhLPuGo1hn+sWI1jFgoMDvFa6qas3y2JPpfBeMdyVoBY+opDN/ZA7QPT
        6ZExYUa7xZchrbGe293Muj0IV5skvk7T+iDjpwzGExZPAZ+/cWhywm+bVApo6gmqfvM6BC4R47DFHSjc
        iu+7F8+HGZrXWzwhw3uq1Vs8BXzn4G9PLCxzrHxOK38ng3t0xeLLkD4BrrvhpYCMmEwKaFwznbcynprw
        XYuvABM7T7KbAKO+XA5ZKDSofWj9HvlnMkks4++cCVzwT4A3VNxCgUHtOmq/mEaHDtYOGSLXWQXJueib
        gD4SQk2AuuPWS0+4bc6J0KgJDmBmfbaTl9cEWlpa1lAzojr4ytxuS0+aU4Irfu/pIH8fefqwbOL6CK6c
        bzXyWr0eXNeZOwmE+iw4zft3i7n/C2hWiu436dOn19xLsHv/Qwkk6zZssFBBKCsr24TWuHThDNrJe50O
        Ag3MzD1OGUcL3QFbsdf4F5r68MgMki5DbwJTUGdg6bMnAHS4qNOTzG01VOOcZ8mB5FPQ3QKRFfTrdy1R
        S1kV9r6upWbYq4V6BWdfcTpsy/p9ItqJScbUPxaJQp167x+L+1DwiN2b8R4HgcQR0jee+54PQL3zBznA
        x0yicGgnEL2B+DPGCeh9ByzAMfgYduoz2UpyoKjoHy1KKd1eMXkyAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/TWADPk9kFz5Q
        aDU/UWhaPFFrfD1SbZE8U3CUPlVyhj9XdWo9S1xCO1h8JDpZfgkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAUmoBPVBoJDxP
        ZHQ9UGi6PVJt3TxUcfA8VXb1PFd6+DxZfPk8Wn/3PFqB9Dtbgug7W4PMOluElDxdhkU9XYYGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+T2YDOExmIztO
        ZoM8UWvkPFRx+jxWd/k7WX35O1uD+Tpdh/k6X4z6OmCQ+jhgk/o4YZP6OGKV+jhilPo4YpT8OWGT9Dlh
        krI4YJFEOF+RCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5P
        ZD49UGm+PFNw9TxXePo8Wn/5O1yG+jpejPo5YZP6OGOY+zdlnfs2ZqH7Nmel/DVoqPw0aan8NWmp/DVo
        qPw2aKb8N2aj+zdlnuM3Y5p1MWGdCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5Q
        Zwc7T2ddPFJt4zxWdfk8Wn/5O12I+jlgkPo4Y5j7NmWg+zVoqPw0a6/8Mm22/DFuuv0wb739Lm/B/S1w
        wv0tcML9Lm/C/TBvv/0wbrv9Mm22/TNssfY0aqyeNGqtHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAPFFrVTxSb988V3j5O1uC+TlejPo4Ypb7NmWg+zRpq/wzbLT8L268/S5xxf0qcsv+KHTR/iZ0
        1v4kddj+JHbb/yN12v8kddn/JnXX/ih00/4qc8z+LXHG/jBwwfYybriaMWy1CwAAAAAAAAAAAAAAAAAA
        AAAAAAAAO09nATtRazc8VHLeO1h8+jtdiPk5YZP6N2Se+zVpqvwybbX8LnDB/Spyy/0mddb+I3ff/iF5
        5v8heuj/I3zr/yR97P8lfuz/JX7s/yR97P8ifOz/IXrp/yF55v8id+H+JXTX/ip00fcqb8N+JmvACgAA
        AAAAAAAAAAAAAAAAAAAdJzQWPFNwqzxZfPk7XYj6OWGU+jZmofs0a6/8MG67/Sxyx/4mdNb+IXfi/iF7
        6v8kfez/KIDu/iuC7v4sg+7+LYPu/i6E7v4uhO7+LYPu/iyD7v4qge7+KIDt/iV+7f4ie+r/IXjk/yV2
        2uQmc9JEAAAAAAAAAAAAAAAAAAAAADZObGk8WHzyOl2J+jhilfo2Z6X7Mmyz/C1wwv0odNP+Infg/yF6
        6f8nf+3+K4Lu/i6E7v4xhe7+M4fu/TWH7v01iO/9N4jv/TuJ7P1IjeT9NYft/TOH7v0xhe79L4Tu/iyC
        7v4ogO3+I3zs/iB45b8JW8AKAAAAAAAAAABBV3ILO1d6xztch/s4YZX6Nmel+zJstPwtcMT9JnTV/iF4
        5P8kfez/KoHu/i6E7v40huz9QYvn/UuO4v1NkOP8RY/p/D+O7vxFj+v8bZnR/Zeeqf5gldb9PIzt/DmL
        7v02iO79M4bu/S+E7v4rg+7+J4Hx9Rh58UcAAAAAAAAAADlVeEw7XIT0OWGT+jVmo/szbLT8LXHG/SV1
        2P4heef/Jn/t/iyD7v40huz+VpHc/oefv/6Wo7b/maOz/pqks/6WpLj+haDE/nyfyv6ln5r/sHw5/56H
        af9jl9j9RJHu/ECO7/w7i+/9N4nv/TKG7v0uhO/9KYHvnyB+9QwxUHUHOFd+izpgjvs3ZZ37RXKy/T5v
        xv0maNr+I3fn/yd/7f4tg+7+RIvk/oOewf6Xo7T/fp7G/myb1v1mmtz8a53a/Huh0f2QpcH+oqat/6yP
        a/+ubRb/sWcF/6aDV/9wnNL8SZTv/ESR7/w/ju/8OYrv/TSH7/0vhfDTLYPuKztcgxg7Xoq6OGOZ+zVp
        qvyClLD+Y2LL/yk26f8yVO3/OWvu/jN07f19nMX+epzJ/laV4/xNlvD8Upnw+1id8vthoO76bqLk+2ai
        7Pp3pd77laa8/Z+ViP6gd0H+smgI/6SEWv5tntv8TZfv+0iT8PxCj+/8PIzv/TaJ8e0tgutNOl6LKDph
        ktE3Z6P7Mmy1/F6KwP6OirX/OC/i/yQb7f8lIu3/OkDj/3SbzP1NlOz8TpDv+1ec8ftdn/L6YqPz+o6o
        yf2inJb+noVm/Xek2/p1quz6larE/X+izvuheED+sWcG/6GMcP5vn9z8UZjw+0mU8PxDkO/8PIzv+DaI
        728eTIY2OGSa3jRqrvwub8H9MnrU/oObvP9nYsn/Jx/q/0RC3P9dZdL+SpPu/FKE7PwsK+z/MTPt/kZc
        7/1xgNT9moiS/61tIf+uaxL/kp6r+3qx9vmAsOz6gq7l+nyk1PqgfU79sWcG/6aGXv52odn8Upnw+0qU
        8PxCkO/9PI3vhD1ehz03ZqHkMW23/CpzzP4ieOP/W5DS/pWXsv8vJ+b/Qk3h/lqM3/1QmO/7dZfZ/Vxa
        0v8/N97/KiHp/yce6/9SOKr/pGEg/6SUgf2Kt/D4jLnx+Ya49/iHt/P5gLLy+JahrfyxcyT/smgI/56J
        b/5bn/L6Upnw+0mV8v1CkPGMHU6LODRpqeAvcMH9JXXX/iJ76v84huf+kqK4/19Zzf8mJOz/Rnfv/Fec
        8PuCpdL8i6TL/IWf0/xmZs/+KSHp/2ZFjP6vZQn/q4pf/qC00PucuN36k8D395C99PeZstP7qaSg/rFw
        HP+xZwf/koyA/WKj9PpanvH7UJjy/UiT8Yc1aKksNG201Styyf0id+D/Jn/t/i6E7v5aktn+k5Cy/zoz
        4P8xPO3+XJ3y+2+m6/uZqcH9lJzA/UhC2v84MuX/iZ3a+q9/Qf6xZgT/rYtf/qe50fmhxfD4p7XI/Kya
        hf+xciL/rm4a/pSUlPt1q+35aaf0+mCi9PpVmvH5TJbxdTJqsBwyb7nBKHPQ/SB55v8qge3+MYXu/T2K
        7f2ToLf+ZV/K/ygf6v9YhPL7bar1+YCu5/pxbsX/Lijo/3p6yf6qrrf9rKmo/bCHUP2xaQr/r5Js/q2z
        vPytmH//sXQl/7BrEf6fn536hbTv+Hmx9vlvqvX5ZaX0+lue8+9Ji91UM263CzBvvZkmddf+Invp/yyC
        7v4zh+/9PIzv/W6c1f2Oi7b/Ny/i/z1M7/1yqfP5j6zY+zQs4/9KUe/9kKzt+KrG6Pizze32vMrd9rV+
        Nf2xaQr/r4FG/7FvGv+ybRT+q6KV+pbA8veKuvf4f7T2+HOt9flqqPX6XqHz2S9TfzEybrgBLnHEXiV2
        2/ojfOv/LYPu/jWI7v0/ju/9Upbo/JGkvv5nYsn/Kifs/22B3v1jZtP+MTDt/nqX9PmozPj2s9L59cHb
        +/XL4fz0ztXe9b2OUfyyZwT/tXkp/be2s/iqy/X2nsb39pC+9veEt/b4d6/1+W2p9PphofCtWpvqEgAA
        AAAYcuAVInbf3CR+7f8uhO7+Nojv/UCP7/1LlO/7d6DV/ZmZsv8uJub/PDfh/zAo5v9VYvH8m8H29q7Q
        +fa71/r1y+D89Njo/fTj7fzz3drV9cOZYvvKxsD3vtj49bDQ+PWjyff2lMD394m69/h6svb5cKz29mKf
        6lpVjtUBAAAAAAAAAAAfeOeCJX/v+y6E7v43iO/9QI/v/EuV8Ptfner7m6i6/mBazf8kG+v/KSTs/4ms
        9fiiyPf2sdH59r/a+vXR5Pz04e398/H3/vP0+P3z4eXq9NPk+/TD3Pv1s9L59aXK+PaVwff3ibr3+Hyy
        9vpxrPXQbKv5EwAAAAAAAAAAAAAAAB935SQlf+/DLoTv/TeI7/1Aj+/8S5Xw+1eb8ft5pd37lJGy/z02
        4P9gd/L7lMD396HI9/ax0fn2v9r69dHk/PTh7f3z8/f+8/X4/vPl7/3z0+X99MPc+/Wz0vn1pcr49pXB
        9/eJuvf4e7L37Gmp+FsAAAAAAAAAAAAAAAAAAAAAIHvtAyuD8FMuhO/vNojv/kCO7/1KlO/8Vpvx+2Oj
        8vqapbz+cX7W/X2o9PmTv/b3n8b39q3P+Pa71/r1yuH89dfo/fTj7v305O/989rp/fTN4vz0v9n69bDR
        +PaiyPf2k8D294i59vd7svaZaqr5EgAAAAAAAAAAAAAAAAAAAAAAAAAAP5X/AS6E73g2ifLvPo7v/UmU
        8PxUmvH7X6Hz+3So6Pt2qe76gLP1+I699viZw/f3p8v49rLS+PbA2vv1yeD89NDk/PTQ5Pz0y+H89MLb
        +/W21Pn1qc349p3F9/ePvff4hLf2uH+19xoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKn/nEDOF
        64Q+jvLyRpLv/FGZ8Ptcn/L7Z6b0+nKs9fl8s/b4iLr3+JPA9/egx/f2qs349rXT+fa81/n1wdv79cLc
        +/W+2fv1ttT59azO+PaiyPf3lsH394q797+Et/YxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAO4npBT2O8mRDkO/eTZfy+1id8vtio/T6bKn0+nav9fmBtfb4irr3+JXB9/eexvf3p8v49qzO
        +Paw0Pj2sND49q3O+PaozPj2oMf3+JfC9++OvPacibr3GQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAPpH4B0GP70FJlPGwU5ry+F2h8/xnpvT6cKv1+Xmx9vmCtvb4jLv3+JPA
        9/ebxPf3n8b396LI9/ejyfj3n8b3+JzF9/mVwffVkL/6aI28+BYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEOV+QhQl+9LV5zyoWGj9ddop/Xxcaz1+3iw
        9fqBtfb6h7j2+Y289/mQvvf5kr/39ZPA9+KSv/e5k8D4cZbD/BoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXnPEOXaH3MWCi
        811rqPSOcKv0rnev9cN8svbFgrb2t4W49p2Juvdwhrn5QYy9+hmUxP8DAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////AA///AAD//AAAP/wAAB/wAAAP8AAAB8AAAAPAAAADwAAAAYAA
        AAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADAAAABwAAAA8AA
        AAPgAAAH8AAAD/gAAB/8AAA//wAA///AAf8=
</value>
  </data>
</root>